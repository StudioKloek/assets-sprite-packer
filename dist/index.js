"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const ora=require("ora"),fs=require("fs-extra"),get=require("get-value");async function readSettingsFrom(e){const t=ora(`Reading settings from ${e}...`).start();let a={};try{const r=await fs.readJSON(e);a=get(r,"sprites",{default:{sourceDirectory:"./assets/",scriptDirectory:"./assets/converted/",targetDirectory:"./assets/converted/",watch:!1,watchDelay:500,directories:[]}})}catch(r){return t.fail(`Could not load settings from ${e}... (does it exist?)`),a}const r=a.directories.length;return r?t.succeed(`Found ${r} directories to process...`):t.fail("Found no directories to process..."),a}const util=require("util"),execProcess=util.promisify(require("child_process").exec),baseOptions={format:"pixijs4","texture-format":"png","png-opt-level":0,opt:"RGBA8888","prepend-folder-name":!0,"trim-sprite-names":!0,algorithm:"MaxRects","maxrects-heuristics":"Best","pack-mode":"Best","scale-mode":"Smooth",multipack:!0,"force-identical-layout":!0,"trim-mode":"Trim","alpha-handling":"ClearTransparentPixels","default-pivot-point":"0,0","enable-rotation":!0,quiet:!0,extrude:"0","shape-padding":"2",variant:["1:@2x","0.5:"]};async function packFolder(e,t){const a=buildTexturePackerCommand(e,Object.assign(t,baseOptions));try{await execProcess(a)}catch(e){if(e&&e.stderr)throw new Error(e.stderr);return!1}return!0}function buildTexturePackerCommand(e,t){t=t||{};const a=new TexturePackerCommand;return a.addPath(`${e}`),Object.keys(t).forEach(e=>{a.addOption(e,t[e])}),a.build()}class TexturePackerCommand{constructor(){this.commands=[],this.path=""}addPath(e){this.path=e}addOption(e,t){this.commands.push({option:`--${this.kebabCase(e)}`,value:t})}build(){if(!this.path)throw new Error("Must specify a path to process (image/directory)");const e=this.commands.map(e=>this.resolveValue(e.option,e.value)).join(" ");return`TexturePacker ${this.path} ${e}`}resolveValue(e,t){return Array.isArray(t)?t.map(t=>this.resolveValue(e,t)).join(" "):`${e}${t=!0===t?"":` ${t}`}`}kebabCase(e){return e.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase()}}const get$1=require("get-value"),set=require("set-value"),globby=require("globby"),pupa=require("pupa"),uppercamelcase=require("uppercamelcase"),fs$1=require("fs-extra"),path=require("path"),loaderInfoTemplate="export const __LOADERINFO__ = {\n  fileName : '{fileName}',\n  numberOfParts : {numberOfParts},\n  type: 'sprites'\n};",assetTemplate="export const {assetName} = {assetData};";async function getDataFrom(e){return await fs$1.readJson(e)}function convertPathToVariableName(e){const t=(e=`${e}`).split("/").map(e=>e.replace(/(\W)/g,"_").replace(/_{2,}/g,".").replace(/^_/,"").replace(/_$/,""));let a,r=[];a=(a=t.pop()).toUpperCase();const o=t.length>1?2:1;for(let e=0;e<o;e++)r.push(t.shift());return r.push("sprites"),r=uppercamelcase(r.join("-")),t.length>0?[r,e=(e=t.join(".")).replace(/(\W^\.)/g,"").replace(/\.{2,}/g,".").replace(/^\./,"").replace(/\.$/,""),a].join("."):[r,a].join(".")}function getNumberOfParts(e){if(e.length>0){const t=e[0];return get$1(t,"meta.related_multi_packs",{default:[]}).length+1}return 0}function parseAssetData(e){const t={};for(const a of e||[])for(const e of Object.keys(a.frames))set(t,convertPathToVariableName(e),e);return t}function getSortedItems(e){const t=[];for(const a of Object.keys(e))e.hasOwnProperty(a)&&t.push([a,e[a]]);t.sort((e,t)=>{const a=e[0],r=t[0];return a<r?-1:a>r?1:0});const a={};for(const e of t)a[e[0]]=e[1];return a}function generateContents(e,t){let a="";for(const t of Object.keys(e)){const r=getSortedItems(e[t]);let o=JSON.stringify(r,null,2);o=o.replace(/"([^(")"]+)":/g,"$1:"),a=`${a}${pupa(assetTemplate,{assetName:t,assetData:o})}\n`}return a=`${a}${pupa(loaderInfoTemplate,{fileName:t.fileName,numberOfParts:t.numberOfParts})}\n`}function getScriptPath(e,t){const a=e.split("/"),r=a.pop();return e=a.join("/"),`${path.join(t,e)}/sprites/${r}.ts`}async function generateCode(e,t,a){const r=get$1(a,"scriptDirectory",{default:t.scriptDirectory}),o=await globby(`${path.join(t.targetDirectory,e)}/*[1-9]+.json`),s=[];for(const e of o)s.push(getDataFrom(e));const n=await Promise.all(s),i=generateContents(parseAssetData(n),{fileName:e,numberOfParts:getNumberOfParts(n)}),c=getScriptPath(e,r);await fs$1.outputFile(c,i)}const ora$1=require("ora"),logSymbols=require("log-symbols"),chalk=require("chalk"),path$1=require("path"),isPacking={},shouldPackAgain={};async function packAll(e,t){console.log(logSymbols.info,chalk.blue("Start packing all items..."));for(const a of e)await pack(a,t);console.log(logSymbols.success,chalk.green("Done packing all items..."))}async function pack(e,t){let a,r;Array.isArray(e)?(a=e[0],r=e[1]):a=e;const o=a.split("/").pop();if(isPacking[a])return console.log(logSymbols.warning,chalk.yellow("Allready packing, starting again afterwards...")),void(shouldPackAgain[a]=!0);isPacking[a]=!0;const s={sheet:`${path$1.join(t.targetDirectory,a,o)}-{n1}{v}.png`,data:`${path$1.join(t.targetDirectory,a,o)}-{n1}{v}.json`,replace:`${o}=${a}`},n=ora$1(`Packing ${a}`).start();try{if(!await packFolder(`${path$1.join(t.sourceDirectory,a)}`,s))return void n.fail(`Error packing ${a}`)}catch(e){return n.fail(`Error packing ${a}`),void console.error(logSymbols.warning,e.message)}await generateCode(a,t,r),isPacking[a]=!1,shouldPackAgain[a]?(shouldPackAgain[a]=!1,n.warn("Needs repacking, something changed while packing..."),await pack(e,t)):n.succeed(`Done packing ${a}`)}const sane=require("sane"),logSymbols$1=require("log-symbols"),chalk$1=require("chalk"),{debounce:debounce}=require("throttle-debounce"),path$2=require("path");async function watch(e,t){for(const a of e)await watchDirectory(a,t)}async function watchDirectory(e,t){return new Promise(a=>{let r,o={};if(Array.isArray(e)?(r=e[0],o=e[1]):r=e,!0!==t.watch&&!0!==o.watch||!1===o.watch)return void a();const s=debounce(t.watchDelay,()=>{pack(e,t)}),n=sane(`${path$2.join(t.sourceDirectory,r)}`,{glob:["**/*.png","**/*.jpg"]});n.on("ready",()=>{console.log(logSymbols$1.info,chalk$1.blue(`Started watching ${r} with a delay of ${t.watchDelay/1e3}s`)),a()}),n.on("change",s),n.on("add",s),n.on("delete",s)})}const AssetFile="assets.json";async function main(e){const t=await readSettingsFrom(e),a=t.directories;delete t.directories,t&&a&&(await packAll(a,t),await watch(a,t))}function pack$1(e){main(e||AssetFile)}exports.pack=pack$1;
