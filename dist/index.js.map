{"version":3,"file":"index.js","sources":["../src/lib/settings.js","../src/lib/texturepacker.js","../src/lib/codegenerator.js","../src/lib/packer.js","../src/lib/watcher.js","../src/index.js"],"sourcesContent":["const ora = require('ora');\nconst fs = require('fs-extra');\nconst get = require('get-value');\n\nexport async function readSettingsFrom(_file) {\n  const spinner = ora(`Reading settings from ${_file}...`).start();\n\n  let settings = {};\n\n  try {\n    const data = await fs.readJSON(_file);\n\n    settings = get(data, 'sprites', { default: {\n      sourceDirectory: './assets/',\n      scriptDirectory: './assets/converted/',\n      targetDirectory: './assets/converted/',\n      watch: false,\n      watchDelay: 500,\n      directories: []\n    } });\n  } catch (error) {\n    spinner.fail(`Could not load settings from ${_file}... (does it exist?)`);\n\n    return settings;\n  }\n\n  const numberOfDirectories = settings.directories.length;\n\n  if (numberOfDirectories) {\n    spinner.succeed(`Found ${numberOfDirectories} directories to process...`);\n\n  } else {\n    spinner.fail(`Found no directories to process...`);\n  }\n\n  return settings;\n}\n","const util = require('util');\nconst execProcess = util.promisify(require('child_process').exec);\n\nconst baseOptions = {\n  'format': 'pixijs4',\n  'texture-format': 'png',\n  'png-opt-level':0,\n  'opt':'RGBA8888',\n  'prepend-folder-name': true,\n  'trim-sprite-names': true,\n\n  'algorithm': 'MaxRects',\n  'maxrects-heuristics': 'Best',\n  'pack-mode': 'Best',\n  'scale-mode': 'Smooth',\n\n  'multipack': true,\n  'force-identical-layout': true,\n  'trim-mode': 'Trim',\n  'alpha-handling': 'ClearTransparentPixels',\n  'default-pivot-point': '0,0',\n  'enable-rotation': true,\n  'quiet': true,\n  'extrude': '0',\n  'shape-padding': '2',\n  'variant': ['1:@2x', '0.5:']\n};\n\nexport async function packFolder(path, options) {\n  const command = buildTexturePackerCommand(path, Object.assign(options, baseOptions));\n\n  try {\n    await execProcess(command);\n  } catch(error) {\n    if (error && error.stderr) {\n      throw new Error(error.stderr);\n    }\n\n    return false;\n  }\n\n  return true;\n}\n\nfunction buildTexturePackerCommand(path, options) {\n  options = options || {};\n\n  const command = new TexturePackerCommand();\n  command.addPath(`${path}`);\n  Object.keys(options).forEach(option => {\n    command.addOption(option, options[option]);\n  });\n\n  return command.build();\n}\n\nclass TexturePackerCommand {\n  constructor() {\n    this.commands = [];\n    this.path = '';\n  }\n\n  addPath(path) {\n    this.path = path;\n  }\n\n  addOption(option, value) {\n    this.commands.push({\n      option: `--${this.kebabCase(option)}`,\n      value\n    });\n  }\n\n  build() {\n    if (!this.path) {\n      throw new Error('Must specify a path to process (image/directory)');\n    }\n\n    const options = this.commands\n      .map(c => this.resolveValue(c.option, c.value))\n      .join(' ');\n\n    return `TexturePacker ${this.path} ${options}`;\n  }\n\n  resolveValue(option, value) {\n    if (Array.isArray(value)) {\n      return value.map(v => this.resolveValue(option, v)).join(' ');\n    }\n\n    if (value === true) {\n      value = '';\n    } else {\n      value = ` ${value}`\n    }\n\n    return `${option}${value}`;\n  }\n\n  // https://gist.github.com/nblackburn/875e6ff75bc8ce171c758bf75f304707\n  kebabCase(text) {\n    return text.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n  }\n}\n","const get = require('get-value');\nconst set = require('set-value');\nconst globby = require('globby');\nconst pupa = require('pupa');\nconst uppercamelcase = require('uppercamelcase');\nconst fs = require('fs-extra');\nconst path = require('path');\n\nconst loaderInfoTemplate = `export const __LOADERINFO__ = {\n  fileName : '{fileName}',\n  numberOfParts : {numberOfParts},\n  type: 'sprites'\n};`;\n\nconst assetTemplate = `export const {assetName} = {assetData};`;\n\nasync function getDataFrom(filepath) {\n  return await fs.readJson(filepath)\n}\n\nfunction convertPathToVariableName(filepath) {\n  filepath = `${filepath}`;\n\n  // path splitsen en opschonen\n  const parts = filepath.split('/').map((part) => {\n    return part.replace(/(\\W)/g, '_').replace(/_{2,}/g, '.').replace(/^_/, '').replace(/_$/, '');\n  });\n\n  let titleParts = [],\n    lastPart;\n\n  // haal laatste onderdeel er af\n  lastPart = parts.pop();\n  lastPart = lastPart.toUpperCase();\n\n  // onderdelen die pad zijn\n  const numberOfPartsWithoutLast = parts.length,\n    numberOfTitleParts = numberOfPartsWithoutLast > 1 ? 2 : 1;\n\n  for (let i = 0; i < numberOfTitleParts; i++) {\n    titleParts.push(parts.shift());\n  }\n\n  titleParts.push('sprites');\n  titleParts = uppercamelcase(titleParts.join('-'));\n\n  if (parts.length > 0) {\n    filepath = parts.join('.');\n    filepath = filepath.replace(/(\\W^\\.)/g, '').replace(/\\.{2,}/g, '.').replace(/^\\./, '').replace(/\\.$/, '');\n\n    return [titleParts, filepath, lastPart].join('.');\n  }\n  else {\n    return [titleParts, lastPart].join('.');\n  }\n}\n\nfunction getNumberOfParts(allDataItems) {\n  if (allDataItems.length > 0) {\n    const firstItem = allDataItems[0],\n      numberOfRelatedPacks = get(firstItem, 'meta.related_multi_packs', { default: [] }).length;\n\n    return numberOfRelatedPacks + 1;\n  }\n\n  return 0;\n}\n\nfunction parseAssetData(allAssetData) {\n  const parsedData = {};\n  for (const assetData of allAssetData || []) {\n    for (const framePath of Object.keys(assetData.frames)) {\n      set(parsedData, convertPathToVariableName(framePath), framePath);\n    }\n  }\n\n  return parsedData;\n}\n\nfunction getSortedItems(_itemsData) {\n  const itemsSortable = [];\n\n  for (const assetName of Object.keys(_itemsData)) {\n    if (_itemsData.hasOwnProperty(assetName)) {\n      itemsSortable.push([assetName, _itemsData[assetName]]);\n    }\n  }\n\n  itemsSortable.sort((a, b) => {\n    const x = a[0],\n      y = b[0];\n\n    return x < y ? -1 : x > y ? 1 : 0;\n  });\n\n\n  const items = {};\n  for (const item of itemsSortable) {\n    items[item[0]] = item[1];\n  }\n\n  return items;\n}\n\nfunction generateContents(parsedAssetData, loaderData) {\n  let contents = '';\n\n  // assets\n  for (const assetName of Object.keys(parsedAssetData)) {\n    const items = getSortedItems(parsedAssetData[assetName]);\n\n    let itemsContent = JSON.stringify(items, null, 2);\n    itemsContent = itemsContent.replace(/\"([^(\")\"]+)\":/g, \"$1:\");\n\n    contents = `${contents}${pupa(assetTemplate, {\n      assetName: assetName,\n      assetData: itemsContent\n    })}\\n`;\n  }\n\n  // loader\n  contents = `${contents}${pupa(loaderInfoTemplate, {\n    fileName: loaderData.fileName,\n    numberOfParts: loaderData.numberOfParts\n  })}\\n`;\n\n  return contents;\n}\n\nfunction getScriptPath(assetPath, scriptDirectory) {\n  const assetParts = assetPath.split('/'),\n  assetName = assetParts.pop();\n  assetPath = assetParts.join('/');\n  return `${path.join(scriptDirectory, assetPath)}/sprites/${assetName}.ts`;\n}\n\nexport async function generateCode(assetPath, settings, itemOptions) {\n\n  const scriptDirectory = get(itemOptions, 'scriptDirectory', { default: settings.scriptDirectory });\n\n  // read all generated json\n  const paths = await globby(`${path.join(settings.targetDirectory, assetPath)}/*[1-9]+.json`),\n    actions = [];\n\n  for (const filepath of paths) {\n    actions.push(getDataFrom(filepath));\n  }\n\n  // parse data to object\n  const allAssetData = await Promise.all(actions),\n    parsedAssetData = parseAssetData(allAssetData),\n    loaderInfo = {\n      fileName: assetPath,\n      numberOfParts: getNumberOfParts(allAssetData)\n    }\n\n  const contents = generateContents(parsedAssetData, loaderInfo),\n    scriptpath = getScriptPath(assetPath, scriptDirectory);\n\n  await fs.outputFile(scriptpath, contents);\n}\n","const ora = require('ora');\nconst logSymbols = require('log-symbols');\nconst chalk = require('chalk');\nconst path = require('path');\n\nimport { packFolder } from './texturepacker';\nimport { generateCode } from './codegenerator';\n\nconst isPacking = {},\n  shouldPackAgain = {};\n\nexport async function packAll(directories, settings) {\n  console.log(logSymbols.info, chalk.blue(`Start packing all items...`));\n\n  for (const directory of directories) {\n    await pack(directory, settings);\n  }\n\n  console.log(logSymbols.success, chalk.green(`Done packing all items...`));\n}\n\nexport async function pack(directory, settings) {\n  let itemPath, itemOptions;\n\n  if (Array.isArray(directory)) {\n    itemPath = directory[0];\n    itemOptions = directory[1];\n  } else {\n    itemPath = directory;\n  }\n\n  const itemPathParts = itemPath.split('/'),\n    directoryName = itemPathParts.pop();\n\n  if (isPacking[itemPath]) {\n    console.log(logSymbols.warning, chalk.yellow(`Allready packing, starting again afterwards...`));\n    shouldPackAgain[itemPath] = true;\n    return;\n  }\n\n  isPacking[itemPath] = true;\n\n  const options = {\n    'sheet': `${path.join(settings.targetDirectory, itemPath, directoryName)}-{n1}{v}.png`,\n    'data': `${path.join(settings.targetDirectory, itemPath, directoryName)}-{n1}{v}.json`,\n    'replace': `${directoryName}=${itemPath}`,\n  }\n\n  const spinner = ora(`Packing ${itemPath}`).start();\n\n  try {\n    const success = await packFolder(`${path.join(settings.sourceDirectory, itemPath)}`, options);\n\n    if (!success) {\n      spinner.fail(`Error packing ${itemPath}`);\n\n      return;\n    }\n  } catch (error) {\n    spinner.fail(`Error packing ${itemPath}`);\n    console.error(logSymbols.warning, error.message);\n\n    return;\n  }\n\n  await generateCode(itemPath, settings, itemOptions);\n\n  isPacking[itemPath] = false;\n\n  if (shouldPackAgain[itemPath]) {\n    shouldPackAgain[itemPath] = false;\n    spinner.warn(`Needs repacking, something changed while packing...`);\n    await pack(directory, settings);\n  } else {\n    spinner.succeed(`Done packing ${itemPath}`);\n  }\n}\n","import { pack } from './packer';\n\nconst sane = require('sane');\nconst logSymbols = require('log-symbols');\nconst chalk = require('chalk');\nconst { debounce } = require('throttle-debounce');\nconst path = require('path');\n\nexport async function watch(directories, settings) {\n  for (const directory of directories) {\n    await watchDirectory(directory, settings);\n  }\n}\n\nasync function watchDirectory(directory, settings) {\n  return new Promise((_resolver) => {\n\n    let itemPath, itemOptions = {};\n\n    if (Array.isArray(directory)) {\n      itemPath = directory[0];\n      itemOptions = directory[1];\n    } else {\n      itemPath = directory;\n    }\n\n    if ((settings.watch !== true && itemOptions.watch !== true) || itemOptions.watch === false) {\n       _resolver();\n       return;\n    }\n\n    const delayedCallback = debounce(settings.watchDelay, () => {\n      pack(directory, settings);\n    });\n    const watcher = sane(`${path.join(settings.sourceDirectory, itemPath)}`, {\n      glob: ['**/*.png', '**/*.jpg']\n    });\n\n    watcher.on('ready', () => {\n      console.log(logSymbols.info, chalk.blue(`Started watching ${itemPath} with a delay of ${settings.watchDelay / 1000}s`));\n      _resolver()\n    });\n    watcher.on('change', delayedCallback);\n    watcher.on('add', delayedCallback);\n    watcher.on('delete', delayedCallback);\n  });\n}\n","import { readSettingsFrom } from './lib/settings';\nimport { watch } from './lib/watcher';\nimport { packAll } from './lib/packer';\n\nconst AssetFile = 'assets.json';\n\nasync function main(_file) {\n  const settings = await readSettingsFrom(_file),\n    directories = settings.directories;\n\n  delete settings.directories;\n\n  if (!settings || !directories) {\n    return;\n  }\n\n  await packAll(directories, settings);\n\n  await watch(directories, settings);\n}\n\nexport function pack(_file) {\n  main(_file || AssetFile);\n}\n\n\nmain('./test/assets.json')\n"],"names":["get","fs","ora","path","logSymbols","chalk","pack"],"mappings":";;;;AAAA,MAAM,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;AAC3B,MAAM,EAAE,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AAC/B,MAAM,GAAG,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;;AAEjC,AAAO,eAAe,gBAAgB,CAAC,KAAK,EAAE;EAC5C,MAAM,OAAO,GAAG,GAAG,CAAC,CAAC,sBAAsB,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;;EAEjE,IAAI,QAAQ,GAAG,EAAE,CAAC;;EAElB,IAAI;IACF,MAAM,IAAI,GAAG,MAAM,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;;IAEtC,QAAQ,GAAG,GAAG,CAAC,IAAI,EAAE,SAAS,EAAE,EAAE,OAAO,EAAE;MACzC,eAAe,EAAE,WAAW;MAC5B,eAAe,EAAE,qBAAqB;MACtC,eAAe,EAAE,qBAAqB;MACtC,KAAK,EAAE,KAAK;MACZ,UAAU,EAAE,GAAG;MACf,WAAW,EAAE,EAAE;KAChB,EAAE,CAAC,CAAC;GACN,CAAC,OAAO,KAAK,EAAE;IACd,OAAO,CAAC,IAAI,CAAC,CAAC,6BAA6B,EAAE,KAAK,CAAC,oBAAoB,CAAC,CAAC,CAAC;;IAE1E,OAAO,QAAQ,CAAC;GACjB;;EAED,MAAM,mBAAmB,GAAG,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC;;EAExD,IAAI,mBAAmB,EAAE;IACvB,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,mBAAmB,CAAC,0BAA0B,CAAC,CAAC,CAAC;;GAE3E,MAAM;IACL,OAAO,CAAC,IAAI,CAAC,CAAC,kCAAkC,CAAC,CAAC,CAAC;GACpD;;EAED,OAAO,QAAQ,CAAC;CACjB;;ACpCD,MAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC7B,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,CAAC;;AAElE,MAAM,WAAW,GAAG;EAClB,QAAQ,EAAE,SAAS;EACnB,gBAAgB,EAAE,KAAK;EACvB,eAAe,CAAC,CAAC;EACjB,KAAK,CAAC,UAAU;EAChB,qBAAqB,EAAE,IAAI;EAC3B,mBAAmB,EAAE,IAAI;;EAEzB,WAAW,EAAE,UAAU;EACvB,qBAAqB,EAAE,MAAM;EAC7B,WAAW,EAAE,MAAM;EACnB,YAAY,EAAE,QAAQ;;EAEtB,WAAW,EAAE,IAAI;EACjB,wBAAwB,EAAE,IAAI;EAC9B,WAAW,EAAE,MAAM;EACnB,gBAAgB,EAAE,wBAAwB;EAC1C,qBAAqB,EAAE,KAAK;EAC5B,iBAAiB,EAAE,IAAI;EACvB,OAAO,EAAE,IAAI;EACb,SAAS,EAAE,GAAG;EACd,eAAe,EAAE,GAAG;EACpB,SAAS,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC;CAC7B,CAAC;;AAEF,AAAO,eAAe,UAAU,CAAC,IAAI,EAAE,OAAO,EAAE;EAC9C,MAAM,OAAO,GAAG,yBAAyB,CAAC,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC,CAAC;;EAErF,IAAI;IACF,MAAM,WAAW,CAAC,OAAO,CAAC,CAAC;GAC5B,CAAC,MAAM,KAAK,EAAE;IACb,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,EAAE;MACzB,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;KAC/B;;IAED,OAAO,KAAK,CAAC;GACd;;EAED,OAAO,IAAI,CAAC;CACb;;AAED,SAAS,yBAAyB,CAAC,IAAI,EAAE,OAAO,EAAE;EAChD,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;;EAExB,MAAM,OAAO,GAAG,IAAI,oBAAoB,EAAE,CAAC;EAC3C,OAAO,CAAC,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;EAC3B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,MAAM,IAAI;IACrC,OAAO,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;GAC5C,CAAC,CAAC;;EAEH,OAAO,OAAO,CAAC,KAAK,EAAE,CAAC;CACxB;;AAED,MAAM,oBAAoB,CAAC;EACzB,WAAW,GAAG;IACZ,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACnB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;GAChB;;EAED,OAAO,CAAC,IAAI,EAAE;IACZ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;GAClB;;EAED,SAAS,CAAC,MAAM,EAAE,KAAK,EAAE;IACvB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;MACjB,MAAM,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;MACrC,KAAK;KACN,CAAC,CAAC;GACJ;;EAED,KAAK,GAAG;IACN,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;MACd,MAAM,IAAI,KAAK,CAAC,kDAAkD,CAAC,CAAC;KACrE;;IAED,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ;OAC1B,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;OAC9C,IAAI,CAAC,GAAG,CAAC,CAAC;;IAEb,OAAO,CAAC,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC;GAChD;;EAED,YAAY,CAAC,MAAM,EAAE,KAAK,EAAE;IAC1B,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;MACxB,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAC/D;;IAED,IAAI,KAAK,KAAK,IAAI,EAAE;MAClB,KAAK,GAAG,EAAE,CAAC;KACZ,MAAM;MACL,KAAK,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,EAAC;KACpB;;IAED,OAAO,CAAC,EAAE,MAAM,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;GAC5B;;;EAGD,SAAS,CAAC,IAAI,EAAE;IACd,OAAO,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC;GAC/D;CACF;;ACvGD,MAAMA,KAAG,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;AACjC,MAAM,GAAG,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;AACjC,MAAM,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AACjC,MAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC7B,MAAM,cAAc,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;AACjD,MAAMC,IAAE,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AAC/B,MAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;;AAE7B,MAAM,kBAAkB,GAAG,CAAC;;;;EAI1B,CAAC,CAAC;;AAEJ,MAAM,aAAa,GAAG,CAAC,uCAAuC,CAAC,CAAC;;AAEhE,eAAe,WAAW,CAAC,QAAQ,EAAE;EACnC,OAAO,MAAMA,IAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC;CACnC;;AAED,SAAS,yBAAyB,CAAC,QAAQ,EAAE;EAC3C,QAAQ,GAAG,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;;;EAGzB,MAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK;IAC9C,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;GAC9F,CAAC,CAAC;;EAEH,IAAI,UAAU,GAAG,EAAE;IACjB,QAAQ,CAAC;;;EAGX,QAAQ,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;EACvB,QAAQ,GAAG,QAAQ,CAAC,WAAW,EAAE,CAAC;;;EAGlC,MAAM,wBAAwB,GAAG,KAAK,CAAC,MAAM;IAC3C,kBAAkB,GAAG,wBAAwB,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;;EAE5D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,kBAAkB,EAAE,CAAC,EAAE,EAAE;IAC3C,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;GAChC;;EAED,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;EAC3B,UAAU,GAAG,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;;EAElD,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;IACpB,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC3B,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;;IAE1G,OAAO,CAAC,UAAU,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;GACnD;OACI;IACH,OAAO,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;GACzC;CACF;;AAED,SAAS,gBAAgB,CAAC,YAAY,EAAE;EACtC,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;IAC3B,MAAM,SAAS,GAAG,YAAY,CAAC,CAAC,CAAC;MAC/B,oBAAoB,GAAGD,KAAG,CAAC,SAAS,EAAE,0BAA0B,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC;;IAE5F,OAAO,oBAAoB,GAAG,CAAC,CAAC;GACjC;;EAED,OAAO,CAAC,CAAC;CACV;;AAED,SAAS,cAAc,CAAC,YAAY,EAAE;EACpC,MAAM,UAAU,GAAG,EAAE,CAAC;EACtB,KAAK,MAAM,SAAS,IAAI,YAAY,IAAI,EAAE,EAAE;IAC1C,KAAK,MAAM,SAAS,IAAI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;MACrD,GAAG,CAAC,UAAU,EAAE,yBAAyB,CAAC,SAAS,CAAC,EAAE,SAAS,CAAC,CAAC;KAClE;GACF;;EAED,OAAO,UAAU,CAAC;CACnB;;AAED,SAAS,cAAc,CAAC,UAAU,EAAE;EAClC,MAAM,aAAa,GAAG,EAAE,CAAC;;EAEzB,KAAK,MAAM,SAAS,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;IAC/C,IAAI,UAAU,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE;MACxC,aAAa,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;KACxD;GACF;;EAED,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK;IAC3B,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACZ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;;IAEX,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;GACnC,CAAC,CAAC;;;EAGH,MAAM,KAAK,GAAG,EAAE,CAAC;EACjB,KAAK,MAAM,IAAI,IAAI,aAAa,EAAE;IAChC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;GAC1B;;EAED,OAAO,KAAK,CAAC;CACd;;AAED,SAAS,gBAAgB,CAAC,eAAe,EAAE,UAAU,EAAE;EACrD,IAAI,QAAQ,GAAG,EAAE,CAAC;;;EAGlB,KAAK,MAAM,SAAS,IAAI,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE;IACpD,MAAM,KAAK,GAAG,cAAc,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEzD,IAAI,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IAClD,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;;IAE7D,QAAQ,GAAG,CAAC,EAAE,QAAQ,CAAC,EAAE,IAAI,CAAC,aAAa,EAAE;MAC3C,SAAS,EAAE,SAAS;MACpB,SAAS,EAAE,YAAY;KACxB,CAAC,CAAC,EAAE,CAAC,CAAC;GACR;;;EAGD,QAAQ,GAAG,CAAC,EAAE,QAAQ,CAAC,EAAE,IAAI,CAAC,kBAAkB,EAAE;IAChD,QAAQ,EAAE,UAAU,CAAC,QAAQ;IAC7B,aAAa,EAAE,UAAU,CAAC,aAAa;GACxC,CAAC,CAAC,EAAE,CAAC,CAAC;;EAEP,OAAO,QAAQ,CAAC;CACjB;;AAED,SAAS,aAAa,CAAC,SAAS,EAAE,eAAe,EAAE;EACjD,MAAM,UAAU,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC;EACvC,SAAS,GAAG,UAAU,CAAC,GAAG,EAAE,CAAC;EAC7B,SAAS,GAAG,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;EACjC,OAAO,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,SAAS,CAAC,CAAC,SAAS,EAAE,SAAS,CAAC,GAAG,CAAC,CAAC;CAC3E;;AAED,AAAO,eAAe,YAAY,CAAC,SAAS,EAAE,QAAQ,EAAE,WAAW,EAAE;;EAEnE,MAAM,eAAe,GAAGA,KAAG,CAAC,WAAW,EAAE,iBAAiB,EAAE,EAAE,OAAO,EAAE,QAAQ,CAAC,eAAe,EAAE,CAAC,CAAC;;;EAGnG,MAAM,KAAK,GAAG,MAAM,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,SAAS,CAAC,CAAC,aAAa,CAAC,CAAC;IAC1F,OAAO,GAAG,EAAE,CAAC;;EAEf,KAAK,MAAM,QAAQ,IAAI,KAAK,EAAE;IAC5B,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;GACrC;;;EAGD,MAAM,YAAY,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;IAC7C,eAAe,GAAG,cAAc,CAAC,YAAY,CAAC;IAC9C,UAAU,GAAG;MACX,QAAQ,EAAE,SAAS;MACnB,aAAa,EAAE,gBAAgB,CAAC,YAAY,CAAC;MAC9C;;EAEH,MAAM,QAAQ,GAAG,gBAAgB,CAAC,eAAe,EAAE,UAAU,CAAC;IAC5D,UAAU,GAAG,aAAa,CAAC,SAAS,EAAE,eAAe,CAAC,CAAC;;EAEzD,MAAMC,IAAE,CAAC,UAAU,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;CAC3C;;AChKD,MAAMC,KAAG,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;AAC3B,MAAM,UAAU,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AAC1C,MAAM,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC/B,MAAMC,MAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC7B,AAGA;AACA,MAAM,SAAS,GAAG,EAAE;EAClB,eAAe,GAAG,EAAE,CAAC;;AAEvB,AAAO,eAAe,OAAO,CAAC,WAAW,EAAE,QAAQ,EAAE;EACnD,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,0BAA0B,CAAC,CAAC,CAAC,CAAC;;EAEvE,KAAK,MAAM,SAAS,IAAI,WAAW,EAAE;IACnC,MAAM,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;GACjC;;EAED,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC;CAC3E;;AAED,AAAO,eAAe,IAAI,CAAC,SAAS,EAAE,QAAQ,EAAE;EAC9C,IAAI,QAAQ,EAAE,WAAW,CAAC;;EAE1B,IAAI,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;IAC5B,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;IACxB,WAAW,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;GAC5B,MAAM;IACL,QAAQ,GAAG,SAAS,CAAC;GACtB;;EAED,MAAM,aAAa,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC;IACvC,aAAa,GAAG,aAAa,CAAC,GAAG,EAAE,CAAC;;EAEtC,IAAI,SAAS,CAAC,QAAQ,CAAC,EAAE;IACvB,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,8CAA8C,CAAC,CAAC,CAAC,CAAC;IAChG,eAAe,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;IACjC,OAAO;GACR;;EAED,SAAS,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;;EAE3B,MAAM,OAAO,GAAG;IACd,OAAO,EAAE,CAAC,EAAEA,MAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,QAAQ,EAAE,aAAa,CAAC,CAAC,YAAY,CAAC;IACtF,MAAM,EAAE,CAAC,EAAEA,MAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,QAAQ,EAAE,aAAa,CAAC,CAAC,aAAa,CAAC;IACtF,SAAS,EAAE,CAAC,EAAE,aAAa,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;IAC1C;;EAED,MAAM,OAAO,GAAGD,KAAG,CAAC,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;;EAEnD,IAAI;IACF,MAAM,OAAO,GAAG,MAAM,UAAU,CAAC,CAAC,EAAEC,MAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;;IAE9F,IAAI,CAAC,OAAO,EAAE;MACZ,OAAO,CAAC,IAAI,CAAC,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;;MAE1C,OAAO;KACR;GACF,CAAC,OAAO,KAAK,EAAE;IACd,OAAO,CAAC,IAAI,CAAC,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC1C,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;;IAEjD,OAAO;GACR;;EAED,MAAM,YAAY,CAAC,QAAQ,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAC;;EAEpD,SAAS,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC;;EAE5B,IAAI,eAAe,CAAC,QAAQ,CAAC,EAAE;IAC7B,eAAe,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC;IAClC,OAAO,CAAC,IAAI,CAAC,CAAC,mDAAmD,CAAC,CAAC,CAAC;IACpE,MAAM,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;GACjC,MAAM;IACL,OAAO,CAAC,OAAO,CAAC,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;GAC7C;CACF;;AC1ED,MAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC7B,MAAMC,YAAU,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AAC1C,MAAMC,OAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC/B,MAAM,EAAE,QAAQ,EAAE,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC;AAClD,MAAMF,MAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;;AAE7B,AAAO,eAAe,KAAK,CAAC,WAAW,EAAE,QAAQ,EAAE;EACjD,KAAK,MAAM,SAAS,IAAI,WAAW,EAAE;IACnC,MAAM,cAAc,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;GAC3C;CACF;;AAED,eAAe,cAAc,CAAC,SAAS,EAAE,QAAQ,EAAE;EACjD,OAAO,IAAI,OAAO,CAAC,CAAC,SAAS,KAAK;;IAEhC,IAAI,QAAQ,EAAE,WAAW,GAAG,EAAE,CAAC;;IAE/B,IAAI,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;MAC5B,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;MACxB,WAAW,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;KAC5B,MAAM;MACL,QAAQ,GAAG,SAAS,CAAC;KACtB;;IAED,IAAI,CAAC,QAAQ,CAAC,KAAK,KAAK,IAAI,IAAI,WAAW,CAAC,KAAK,KAAK,IAAI,KAAK,WAAW,CAAC,KAAK,KAAK,KAAK,EAAE;OACzF,SAAS,EAAE,CAAC;OACZ,OAAO;KACT;;IAED,MAAM,eAAe,GAAG,QAAQ,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM;MAC1D,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;KAC3B,CAAC,CAAC;IACH,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,EAAEA,MAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE;MACvE,IAAI,EAAE,CAAC,UAAU,EAAE,UAAU,CAAC;KAC/B,CAAC,CAAC;;IAEH,OAAO,CAAC,EAAE,CAAC,OAAO,EAAE,MAAM;MACxB,OAAO,CAAC,GAAG,CAACC,YAAU,CAAC,IAAI,EAAEC,OAAK,CAAC,IAAI,CAAC,CAAC,iBAAiB,EAAE,QAAQ,CAAC,iBAAiB,EAAE,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACxH,SAAS,GAAE;KACZ,CAAC,CAAC;IACH,OAAO,CAAC,EAAE,CAAC,QAAQ,EAAE,eAAe,CAAC,CAAC;IACtC,OAAO,CAAC,EAAE,CAAC,KAAK,EAAE,eAAe,CAAC,CAAC;IACnC,OAAO,CAAC,EAAE,CAAC,QAAQ,EAAE,eAAe,CAAC,CAAC;GACvC,CAAC,CAAC;CACJ;;AC1CD,MAAM,SAAS,GAAG,aAAa,CAAC;;AAEhC,eAAe,IAAI,CAAC,KAAK,EAAE;EACzB,MAAM,QAAQ,GAAG,MAAM,gBAAgB,CAAC,KAAK,CAAC;IAC5C,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAC;;EAErC,OAAO,QAAQ,CAAC,WAAW,CAAC;;EAE5B,IAAI,CAAC,QAAQ,IAAI,CAAC,WAAW,EAAE;IAC7B,OAAO;GACR;;EAED,MAAM,OAAO,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;;EAErC,MAAM,KAAK,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;CACpC;;AAED,AAAO,SAASC,MAAI,CAAC,KAAK,EAAE;EAC1B,IAAI,CAAC,KAAK,IAAI,SAAS,CAAC,CAAC;CAC1B;;;AAGD,IAAI,CAAC,oBAAoB,CAAC;;;;"}